security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        interviewer:
            id: app.authentication.provider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        auth_lookup:
            pattern: ^/auth/lookup$
            stateless: true
            http_basic:
                realm: "Auth"
        signup:
            pattern: ^/signup$
            stateless: true
        main:
            pattern: ^/
            stateless: true
            provider: interviewer
            custom_authenticators:
                - App\Authentication\InterviewerAuthenticator

    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/questions, roles: PUBLIC_ACCESS }
        - { path: ^/signup, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
